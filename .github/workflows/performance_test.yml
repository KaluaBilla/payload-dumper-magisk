name: Payload Dumper Performance Comparison
on:
  workflow_dispatch:
jobs:
  benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dumper: [payload-dumper-go, payload-dumper-rust]
        input_type: [zip, raw]
    
    name: ${{ matrix.dumper }} - ${{ matrix.input_type }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install hyperfine
        run: sudo apt update && sudo apt install -y hyperfine
      
      - name: Set dumper variables (Go)
        if: matrix.dumper == 'payload-dumper-go'
        id: vars-go
        run: |
          echo "url=https://github.com/ssut/payload-dumper-go/releases/download/1.3.0/payload-dumper-go_1.3.0_linux_amd64.tar.gz" >> $GITHUB_OUTPUT
          echo "binary=payload-dumper-go" >> $GITHUB_OUTPUT
          echo "archive_type=tar.gz" >> $GITHUB_OUTPUT
      
      - name: Download and extract Go dumper
        if: matrix.dumper == 'payload-dumper-go'
        run: |
          mkdir -p dumper
          cd dumper
          wget ${{ steps.vars-go.outputs.url }} -O dumper_archive
          tar -xzf dumper_archive
          chmod +x ${{ steps.vars-go.outputs.binary }}
          echo "$(pwd)" >> $GITHUB_PATH
      
      - name: Checkout Rust dumper source
        if: matrix.dumper == 'payload-dumper-rust'
        uses: actions/checkout@v4
        with:
          repository: KaluaBilla/payload-dumper-rust
          ref: main
          path: payload-dumper-rust
      
      - name: Install Rust toolchain
        if: matrix.dumper == 'payload-dumper-rust'
        uses: dtolnay/rust-toolchain@nightly
      
      - name: Set Rust nightly as default
        if: matrix.dumper == 'payload-dumper-rust'
        run: rustup default nightly
      
      - name: Build Rust dumper (release)
        if: matrix.dumper == 'payload-dumper-rust'
        run: |
          cd payload-dumper-rust
          cargo build --release
          mkdir -p ../dumper
          cp target/release/payload_dumper ../dumper/
          chmod +x ../dumper/payload_dumper
          echo "$(pwd)/../dumper" >> $GITHUB_PATH
      
      - name: Set binary name
        id: binary
        run: |
          if [ "${{ matrix.dumper }}" == "payload-dumper-go" ]; then
            echo "name=payload-dumper-go" >> $GITHUB_OUTPUT
          else
            echo "name=payload_dumper" >> $GITHUB_OUTPUT
          fi
      
      - name: Download OTA package
        run: |
          mkdir -p ota
          cd ota
          wget https://dl.google.com/dl/android/aosp/rango-ota-bd3a.250808.001-f5927106.zip -O ota.zip
      
      - name: Extract payload.bin (for raw input test)
        if: matrix.input_type == 'raw'
        run: |
          cd ota
          unzip -j ota.zip payload.bin
      
      - name: Run benchmark - ZIP input
        if: matrix.input_type == 'zip'
        run: |
          mkdir -p output_zip
          cd ota
          hyperfine \
            --warmup 1 \
            --runs 3 \
            --export-json ../benchmark_${{ matrix.dumper }}_zip.json \
            --export-markdown ../benchmark_${{ matrix.dumper }}_zip.md \
            "${{ steps.binary.outputs.name }} -o ../output_zip ota.zip"
      
      - name: Run benchmark - Raw payload.bin
        if: matrix.input_type == 'raw'
        run: |
          mkdir -p output_raw
          cd ota
          hyperfine \
            --warmup 1 \
            --runs 3 \
            --export-json ../benchmark_${{ matrix.dumper }}_raw.json \
            --export-markdown ../benchmark_${{ matrix.dumper }}_raw.md \
            "${{ steps.binary.outputs.name }} -o ../output_raw payload.bin"
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-${{ matrix.dumper }}-${{ matrix.input_type }}
          path: |
            benchmark_*.json
            benchmark_*.md
  
  summarize:
    needs: benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: results
      
      - name: Create summary
        run: |
          echo "# Payload Dumper Performance Comparison" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          for dir in results/*/; do
            echo "## $(basename $dir)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            if [ -f "$dir"/*.md ]; then
              cat "$dir"/*.md >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          done
      
      - name: Upload combined results
        uses: actions/upload-artifact@v4
        with:
          name: all-benchmark-results
          path: results/
