name: Build and Release

on:
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

          
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y wget autopoint ninja-build make autoconf automake libtool pkg-config texinfo gettext gperf bison flex python3 python3-pip python3-venv pipx libtool-bin

      - name: Install meson
        run: |
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
          export PATH="$HOME/.local/bin:$PATH"
          pipx install meson
          meson --version


      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r29
          add-to-path: true

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Export NDK environment variables
        run: |
          echo "ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV

       # Taken from https://github.com/rhythmcache/payload-dumper-rust/blob/d0c12d8e11e3624aedd2b8e4680e86114e830efd/.github/workflows/build.yml#L257C1-L271C76
      - name: Create symlinks for NDK toolchains
        run: |
         NDK_TOOLCHAIN="${{ steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin"
         cd "$NDK_TOOLCHAIN"
         ln -sf aarch64-linux-android21-clang aarch64-linux-android-clang
         ln -sf aarch64-linux-android21-clang++ aarch64-linux-android-clang++
         ln -sf armv7a-linux-androideabi21-clang armv7a-linux-androideabi-clang
         ln -sf armv7a-linux-androideabi21-clang++ armv7a-linux-androideabi-clang++
         ln -sf arm-linux-androideabi21-clang arm-linux-androideabi-clang
         ln -sf arm-linux-androideabi21-clang++ arm-linux-androideabi-clang++
         ln -sf x86_64-linux-android21-clang x86_64-linux-android-clang
         ln -sf x86_64-linux-android21-clang++ x86_64-linux-android-clang++
         ln -sf i686-linux-android21-clang i686-linux-android-clang
         ln -sf i686-linux-android21-clang++ i686-linux-android-clang++       

      - name: Run build script
        run: bash .github/build.sh
        env:
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
          ANDROID_NDK_ROOT: ${{ env.ANDROID_NDK_ROOT }}

      - name: Bump version in module.prop
        id: bump_version
        run: |
          # Read current values
          CURRENT_VERSION=$(grep "^version=" module.prop | cut -d'=' -f2)
          CURRENT_VERSION_CODE=$(grep "^versionCode=" module.prop | cut -d'=' -f2)
          
          # Bump version (increment last number)
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          NEW_VERSION_CODE=$((CURRENT_VERSION_CODE + 1))
          
          # Update module.prop
          sed -i "s/^version=.*/version=$NEW_VERSION/" module.prop
          sed -i "s/^versionCode=.*/versionCode=$NEW_VERSION_CODE/" module.prop
          
          # Save for later steps
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "NEW_VERSION_CODE=$NEW_VERSION_CODE" >> $GITHUB_OUTPUT
          
          echo "Bumped version to $NEW_VERSION (code: $NEW_VERSION_CODE)"

      - name: Create release archive
        run: |
          zip -r payload-dumper-${{ steps.bump_version.outputs.NEW_VERSION }}.zip \
            bins \
            META-INF \
            customize.sh \
            module.prop

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.NEW_VERSION }}
          release_name: Release v${{ steps.bump_version.outputs.NEW_VERSION }}
          body: |
            Automated release from GitHub Actions
            
            Version: ${{ steps.bump_version.outputs.NEW_VERSION }}
            Version Code: ${{ steps.bump_version.outputs.NEW_VERSION_CODE }}
            
            See [changelog.md](https://raw.githubusercontent.com/${{ github.repository }}/main/changelog.md) for details.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./payload-dumper-${{ steps.bump_version.outputs.NEW_VERSION }}.zip
          asset_name: payload-dumper-${{ steps.bump_version.outputs.NEW_VERSION }}.zip
          asset_content_type: application/zip

      - name: Update changelog.md
        run: |
          CURRENT_DATE=$(date +"%Y-%m-%d %H:%M:%S")
          cat > changelog.md << EOF
          # Changelog
          
          ## Version ${{ steps.bump_version.outputs.NEW_VERSION }} (Build ${{ steps.bump_version.outputs.NEW_VERSION_CODE }})
          
          **Release Date:** $CURRENT_DATE
          
          **Changes:**
          - Automated release from GitHub Actions workflow run #${{ github.run_number }}
          - Built from commit: ${{ github.sha }}
          
          ---
          
          This release was automatically generated by GitHub Actions.
          EOF

      - name: Update updateJson
        run: |
          cat > updateJson << EOF
          {
            "versionCode": ${{ steps.bump_version.outputs.NEW_VERSION_CODE }},
            "version": "${{ steps.bump_version.outputs.NEW_VERSION }}",
            "zipUrl": "https://github.com/${{ github.repository }}/releases/download/v${{ steps.bump_version.outputs.NEW_VERSION }}/payload-dumper-${{ steps.bump_version.outputs.NEW_VERSION }}.zip",
            "changelog": "https://raw.githubusercontent.com/${{ github.repository }}/main/changelog.md"
          }
          EOF

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.NEW_VERSION }} [skip ci]"
          git push
